The Tower of Hanoi, is a mathematical problem which consists of three rods and multiple disks. Initially, all the disks are placed on one rod, one over the other in 
ascending order of size similar to a cone-shaped tower.
The objective of this problem is to move the stack of disks from the initial rod to another rod, following these rules:
A disk cannot be placed on top of a smaller disk
No disk can be placed on top of the smaller disk.
-----------------------------------------------------------
class Recursion {
	public static void TOH(int n, String src, String dest, String help) {
		// +ve base case
		if (n == 0)
			return;

		TOH(n - 1, src, help, dest);
		System.out.println(n + " move from " + src + " to " + dest);
		TOH(n - 1, help, dest, src);
	}

	public static void main(String[] args) {
		TOH(3, "S", "D", "H");
	}
}
---------------------------------------------------------------
Output:
1 move from S to D
2 move from S to H
1 move from D to H
3 move from S to D
1 move from H to S
2 move from H to D
1 move from S to D
